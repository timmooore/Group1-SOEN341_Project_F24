<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/edit_team.css">
    <link rel="stylesheet" href="/css/navbar.css">
    <title>Edit Team</title>
</head>
<body>
<%- include('partials/instructor_navbar') %>    

<div class="container mt-4">
    <button class="submit-button" onclick="location.href='/assessments-detailed/<%= classId %>'">View Detailed Assessments</button>
    <button class="submit-button" onclick="location.href='/assessments-summary/<%= classId %>'">View Summarized Assessments</button>
</div>

<!-- Search container for search bar and results -->
<div class="container mt-4">
    <h2>Search Students</h2>
    <div class="search-container">
        <input 
            type="text" 
            id="searchInput" 
            class="search-bar form-control"
            placeholder="Search for students" 
            oninput="filterStudents()"
        >
        <ul id="studentResults" class="results-list list-group mt-2"></ul>
    </div>
</div>

<script>
    // Ensure students are loaded into the script
    const allStudents = <%- JSON.stringify(allStudents) %>; // Server-side data
    const classId = "<%= classId %>";

    if (!Array.isArray(allStudents)) {
        console.error("Error: allStudents is not an array:", allStudents);
    }

    function filterStudents() {
        const query = document.getElementById('searchInput').value.toLowerCase();
        const resultsList = document.getElementById('studentResults');
        resultsList.innerHTML = ''; // Clear previous results

        if (!query) return; // Exit if the query is empty

        // Filter students based on the query
        const filteredStudents = allStudents.filter(student => 
            student.username.toLowerCase().includes(query)
        );

        if (filteredStudents.length === 0) {
            resultsList.innerHTML = '<li class="list-group-item text-muted">No results found</li>';
            return;
        }

        // Populate the list with matching students
        filteredStudents.forEach(student => {
            const li = document.createElement('li');
            li.textContent = student.username;
            li.classList.add('list-group-item', 'student-item');
            li.dataset.studentId = student._id;

            li.addEventListener('click', () => { 
                window.location.href = `/assessments/${classId}/${student._id}`;
            });

            resultsList.appendChild(li);
        });
    }
</script>
</body>
</html>