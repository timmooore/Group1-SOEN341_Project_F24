<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/edit_team.css">
    <title>Edit Team</title>
</head>
<body>
    
<h1>Edit Team: <%= team.team_name %></h1>

<!-- Display current team students -->
<h2>Current Students in this Team</h2>
<ul>
  <% team.student_ids.forEach(student => { %>
    <li class="current-team-student"><%= student.username %></li>
  <% }) %>
</ul>

<!-- Search container for search bar and results -->
<h2> Search for Students to Add</h2>
<div class="search-container">
    <input 
      type="text" 
      id="searchInput" 
      class="search-bar"
      placeholder="Search for students" 
      oninput="filterStudents()"
    >
    
    <!-- Results will be displayed below the input -->
    <ul id="studentResults" class="results-list"></ul>
</div>

<!-- Inline script for filtering students and adding to the team -->
<script>
  const allStudents = <%- JSON.stringify(allStudents) %>; // Pass all students to JS
  const currentTeamStudentIds = <%- JSON.stringify(team.student_ids.map(s => s._id)) %>; // Get IDs of current team students

  function filterStudents() {
    const query = document.getElementById('searchInput').value.toLowerCase();
    const resultsList = document.getElementById('studentResults');
    resultsList.innerHTML = ''; // Clear previous results

    // Filter students by the input query, and exclude those already in the team
    const filteredStudents = allStudents.filter(student => 
      student.username.toLowerCase().includes(query) && !currentTeamStudentIds.includes(student._id)
    );

    // Display the filtered student list
    filteredStudents.forEach(student => {
      const li = document.createElement('li');
      li.textContent = student.username;
      li.classList.add('student-item');
      li.dataset.studentId = student._id; // Store the student ID in the data attribute

      // Add an event listener to handle adding the student to the team
      li.addEventListener('click', () => addToTeam(student._id)); // Correctly pass the student ID

      resultsList.appendChild(li);
    });
  }

  async function addToTeam(studentId) {
    try {
      const teamId = '<%= team._id %>';

      // Send a POST request to add the student to the team
      const res = await fetch(`/teams/${teamId}/add-student`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ studentId }) //Sends the student ID in the request body as JSON
      });
      
      //Change this later; I fucking hate alerts => it should be flash
      if (res.ok) {
        alert('Student successfully added to the team!');
        location.reload(); // Reload the page to reflect changes
      } else {
        const error = await res.json();
        alert(`Error adding student: ${error.message}`);
      }
    } catch (error) {
      console.error('Error:', error);
      alert('An error occurred while adding the student.');
    }
  }
</script>

</body>
</html>
